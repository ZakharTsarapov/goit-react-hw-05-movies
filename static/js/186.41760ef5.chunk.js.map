{"version":3,"file":"static/js/186.41760ef5.chunk.js","mappings":"yNAyCA,UArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,WAAMR,GAAN,mGAEWS,EAAAA,EAAAA,IAAaT,GAFxB,gBAEPU,EAFO,EAEPA,QACRN,EAAWM,GAHI,gDAKfJ,EAAS,KAAMK,SALA,yDAAH,sDAShBH,EAAWR,EACZ,GAAE,CAACA,KAGF,gCACGG,EAAQS,QACP,wBACGT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,yBAAG,WAASF,MACZ,uBAAIC,MAFGC,EADE,OAQf,uBAAG,2CAEJX,IAAS,wBAAI,kCAGnB,C,8LCrCKY,EAAU,mCACVC,EAAU,gCAIHC,EAAc,mCAAG,sGACLC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,0BAHL,MAGK,oBAC8BD,EAD9B,YADK,uBACpBI,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,qDAOdC,EAAiB,mCAAG,WAAMtB,GAAN,uFACRoB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACFlB,EADE,oBACiBiB,IAFT,cACzBM,EADyB,yBAIxBA,EAASF,MAJe,2CAAH,sDAOjBG,EAAS,mCAAG,WAAMxB,GAAN,uFACAoB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACDlB,EADC,4BAC0BiB,IAF1B,cACjBM,EADiB,yBAIhBA,EAASF,MAJO,2CAAH,sDAOTZ,EAAY,mCAAG,WAAMT,GAAN,uFACHoB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACDlB,EADC,4BAC0BiB,IAFvB,cACpBM,EADoB,yBAInBA,EAASF,MAJU,2CAAH,sDAOZI,EAAU,mCAAG,WAAMC,GAAN,uFACDN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACcD,EADd,kBAC+BS,EAD/B,gCADC,cAClBH,EADkB,yBAIjBA,EAASF,MAJQ,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getReviews = async movieId => {\n      try {\n        const { results } = await fetchReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    getReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>sorry no information about this movie.</p>\n      )}\n      {error && <h2>Something went wrong man...</h2>}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '2b204635b1bab7df660e08a06b148a8e';\nconst API_URL = 'https://api.themoviedb.org/3/';\n\nconst time_window = 'day';\n\nexport const fetchAllMovies = async () => {\n  const { data } = await axios.get(\n    `${API_URL}trending/movie/${time_window}?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${API_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `${API_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `${API_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data\n}\n\nexport const fetchQuery = async query => {\n  const response = await axios.get(\n    `${API_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n  return response.data\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","getReviews","fetchReviews","results","message","length","map","author","content","id","API_KEY","API_URL","fetchAllMovies","axios","data","fetchMovieDetails","response","fetchCast","fetchQuery","query"],"sourceRoot":""}